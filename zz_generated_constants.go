//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package main

const (
	module = "generated"
	version = "v0.1.0"
)

// AccessRights - Access rights of an authorization
type AccessRights string

const (
	AccessRightsListen AccessRights = "Listen"
	AccessRightsManage AccessRights = "Manage"
	AccessRightsSend AccessRights = "Send"
)

// PossibleAccessRightsValues returns the possible values for the AccessRights const type.
func PossibleAccessRightsValues() []AccessRights {
	return []AccessRights{
		AccessRightsListen,
		AccessRightsManage,
		AccessRightsSend,
	}
}

// ToPtr returns a *AccessRights pointing to the current value.
func (c AccessRights) ToPtr() *AccessRights {
	return &c
}

// EntityAvailabilityStatus - Availability status of the entity
type EntityAvailabilityStatus string

const (
	EntityAvailabilityStatusAvailable EntityAvailabilityStatus = "Available"
	EntityAvailabilityStatusLimited EntityAvailabilityStatus = "Limited"
	EntityAvailabilityStatusRenaming EntityAvailabilityStatus = "Renaming"
	EntityAvailabilityStatusRestoring EntityAvailabilityStatus = "Restoring"
	EntityAvailabilityStatusUnknown EntityAvailabilityStatus = "Unknown"
)

// PossibleEntityAvailabilityStatusValues returns the possible values for the EntityAvailabilityStatus const type.
func PossibleEntityAvailabilityStatusValues() []EntityAvailabilityStatus {
	return []EntityAvailabilityStatus{
		EntityAvailabilityStatusAvailable,
		EntityAvailabilityStatusLimited,
		EntityAvailabilityStatusRenaming,
		EntityAvailabilityStatusRestoring,
		EntityAvailabilityStatusUnknown,
	}
}

// ToPtr returns a *EntityAvailabilityStatus pointing to the current value.
func (c EntityAvailabilityStatus) ToPtr() *EntityAvailabilityStatus {
	return &c
}

// EntityStatus - Status of a Service Bus resource
type EntityStatus string

const (
	EntityStatusActive EntityStatus = "Active"
	EntityStatusCreating EntityStatus = "Creating"
	EntityStatusDeleting EntityStatus = "Deleting"
	EntityStatusDisabled EntityStatus = "Disabled"
	EntityStatusReceiveDisabled EntityStatus = "ReceiveDisabled"
	EntityStatusRenaming EntityStatus = "Renaming"
	EntityStatusRestoring EntityStatus = "Restoring"
	EntityStatusSendDisabled EntityStatus = "SendDisabled"
	EntityStatusUnknown EntityStatus = "Unknown"
)

// PossibleEntityStatusValues returns the possible values for the EntityStatus const type.
func PossibleEntityStatusValues() []EntityStatus {
	return []EntityStatus{
		EntityStatusActive,
		EntityStatusCreating,
		EntityStatusDeleting,
		EntityStatusDisabled,
		EntityStatusReceiveDisabled,
		EntityStatusRenaming,
		EntityStatusRestoring,
		EntityStatusSendDisabled,
		EntityStatusUnknown,
	}
}

// ToPtr returns a *EntityStatus pointing to the current value.
func (c EntityStatus) ToPtr() *EntityStatus {
	return &c
}

// MessagingSKU - The SKU for the messaging entity.
type MessagingSKU string

const (
	MessagingSKUBasic MessagingSKU = "Basic"
	MessagingSKUPremium MessagingSKU = "Premium"
	MessagingSKUStandard MessagingSKU = "Standard"
)

// PossibleMessagingSKUValues returns the possible values for the MessagingSKU const type.
func PossibleMessagingSKUValues() []MessagingSKU {
	return []MessagingSKU{
		MessagingSKUBasic,
		MessagingSKUPremium,
		MessagingSKUStandard,
	}
}

// ToPtr returns a *MessagingSKU pointing to the current value.
func (c MessagingSKU) ToPtr() *MessagingSKU {
	return &c
}

// NamespaceType - The type of entities the namespace can contain.
type NamespaceType string

const (
	NamespaceTypeEventHub NamespaceType = "EventHub"
	NamespaceTypeMessaging NamespaceType = "Messaging"
	NamespaceTypeMixed NamespaceType = "Mixed"
	NamespaceTypeNotificationHub NamespaceType = "NotificationHub"
	NamespaceTypeRelay NamespaceType = "Relay"
)

// PossibleNamespaceTypeValues returns the possible values for the NamespaceType const type.
func PossibleNamespaceTypeValues() []NamespaceType {
	return []NamespaceType{
		NamespaceTypeEventHub,
		NamespaceTypeMessaging,
		NamespaceTypeMixed,
		NamespaceTypeNotificationHub,
		NamespaceTypeRelay,
	}
}

// ToPtr returns a *NamespaceType pointing to the current value.
func (c NamespaceType) ToPtr() *NamespaceType {
	return &c
}

